{"version":3,"sources":["api/user/user.controller.js"],"names":["create","update","changePassword","changeAvatar","forgot","reset","me","authCallback","_","crypto","promisifyAll","require","validationError","res","statusCode","err","status","json","handleError","console","log","send","req","newUser","body","provider","displayName","firstName","lastName","save","then","token","sign","_id","user","secrets","session","expiresIn","catch","userId","findById","exec","extend","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","end","message","files","file","mimetype","indexOf","avatarUrl","path","width","height","pathTo","imgPath","findOne","email","randomBytesAsync","buffer","toString","resetPasswordToken","resetPasswordExpires","Date","now","params","$gt","undefined","next","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nimport User from './user.model';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\nimport { loadImage } from '../../components/images';\nimport { removeImage } from '../../components/images';\nimport * as _ from 'lodash';\nimport Promise from 'bluebird';\nconst crypto = Promise.promisifyAll(require('crypto'));\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    return res.status(statusCode).json(err);\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    console.log(err);\n    return res.status(statusCode).send(err);\n  };\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n  let newUser = new User(req.body);\n  newUser.provider = 'local';\n  newUser.displayName = `${newUser.firstName} ${newUser.lastName}`;\n  newUser.save()\n    .then(user => {\n      const token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(validationError(res));\n}\n\n/**\n * Updates an existing user\n */\nexport function update(req, res) {\n  const userId = req.user._id;\n  return User.findById(userId, '-salt -password').exec()\n    .then(user => {\n      _.extend(user, req.body);\n      user.displayName = `${user.firstName} ${user.lastName}`;\n      return user.save();\n    })\n    .then(user => {\n      res.json(user);\n    })\n    .catch(validationError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  const userId = req.user._id;\n  const oldPass = String(req.body.oldPassword);\n  const newPass = String(req.body.newPassword);\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(200).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).json({ message: 'Current password is incorrect!' });\n      }\n    });\n}\n\n/**\n * Change a user's avatar\n */\nexport function changeAvatar(req, res) {\n  const userId = req.user._id;\n\n  return User.findById(userId).exec()\n    .then(user => {\n      // if there is avatar\n      if(req.files.file) {\n        // check if files have valid mimetype\n        if(req.files.file.mimetype.indexOf('jpeg') === -1 && req.files.file.mimetype.indexOf('png') === -1) {\n          return res.status(400).send({\n            message: 'Image should be in JPEG or PNG format'\n          });\n        }\n\n        if(user.avatarUrl.indexOf('default-avatar') > -1) {\n          return loadImage(req.files.file.path, {\n            width: 30,\n            height: 30,\n            pathTo: '/avatars'\n          })\n            .then(imgPath => {\n              user.avatarUrl = imgPath;\n              return user.save();\n            })\n            .then(function(user) {\n              res.end(user.avatarUrl);\n            })\n            .catch(handleError(res));\n        } else {\n          return removeImage(user.avatarUrl)\n            .then(() => {\n              return loadImage(req.files.file.path, {\n                width: 30,\n                height: 30,\n                pathTo: '/avatars'\n              })\n                .then(imgPath => {\n                  user.avatarUrl = imgPath;\n                  return user.save();\n                })\n                .then(function(user) {\n                  res.end(user.avatarUrl);\n                });\n            })\n            .catch(handleError(res));\n        }\n      } else {\n        res.status(400).send({\n          message: 'No File Provided'\n        });\n      }\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Forgot password: check if email is exist\n */\nexport function forgot(req, res) {\n  let token;\n  return User.findOne({ email: req.body.email }).exec()\n    .then(user => {\n      if(!user) {\n        return res.status(401).json({ message: 'Email not found!' });\n      } else {\n        return crypto.randomBytesAsync(20)\n          .then(buffer => {\n            token = buffer.toString('hex');\n            user.resetPasswordToken = token;\n            user.resetPasswordExpires = Date.now() + 3600000; // 1 hour\n            return user.save();\n          })\n          .then(() => {\n            res.json({ token: token });\n          })\n          .catch(handleError(res));\n      }\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Reset old password, save new password\n */\nexport function reset(req, res) {\n  return User.findOne({\n    resetPasswordToken: req.params.token,\n    resetPasswordExpires: {\n      $gt: Date.now()\n    }}).exec()\n    .then(user => {\n      if(!user) {\n        return res.status(401).json({ message: 'Token not found!' });\n      } else {\n        user.password = req.body.password;\n        user.resetPasswordToken = undefined;\n        user.resetPasswordExpires = undefined;\n        return user.save()\n          .then(user => {\n            const token = jwt.sign({ _id: user._id }, config.secrets.session, {\n              expiresIn: 60 * 60 * 5\n            });\n            res.json({ token });\n          });\n      }\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n\n  return User.findOne({ _id: userId }, '-salt -password').exec()\n    .then(user => { // don't ever give out the password or salt\n      if(!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"]}