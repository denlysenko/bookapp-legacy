"use strict";var ApplicationConfiguration=function(){var applicationModuleName="my-book-app",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","ngFileUpload","btford.socket-io"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("books"),ApplicationConfiguration.registerModule("comments"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("reader"),ApplicationConfiguration.registerModule("sidebar"),ApplicationConfiguration.registerModule("users"),angular.module("books").config(["$stateProvider",function($stateProvider){$stateProvider.state("add",{url:"/book/add",templateUrl:"modules/books/views/add.client.view.html",controller:"AddbookController"}).state("browse",{url:"/book/browse",templateUrl:"modules/books/views/books.client.view.html",controller:"BookController"}).state("detailsBrowse",{url:"/book/browse/:author/:slug",templateUrl:"modules/books/views/book.details.client.view.html",controller:"BookDetailsController"}).state("buy",{url:"/book/buy",templateUrl:"modules/books/views/books.client.view.html",controller:"BookController"}).state("detailsBuy",{url:"/book/buy/:author/:slug",templateUrl:"modules/books/views/book.details.client.view.html",controller:"BookDetailsController"}).state("best",{url:"/book/best",templateUrl:"modules/books/views/books.client.view.html",controller:"BookController"}).state("favourite",{url:"/book/favourite",templateUrl:"modules/books/views/books.client.view.html",controller:"BookController"}).state("wishlist",{url:"/book/wishlist",templateUrl:"modules/books/views/books.client.view.html",controller:"BookController"}).state("mustread",{url:"/book/mustread",templateUrl:"modules/books/views/books.client.view.html",controller:"BookController"}).state("read",{url:"/book/read/:author/:slug",templateUrl:"modules/reader/views/reader.client.view.html",controller:"ReaderController"})}]),angular.module("books").controller("AddbookController",["$scope","Upload",function($scope,Upload){$scope.title="Add Book",$scope.book={},$scope.book.paid=!1,$scope.add=function(){$scope.success=$scope.error=null;var files=[$scope.cover[0],$scope.epub[0]],filesName=["cover","epub"];Upload.upload({url:"/book/add",method:"POST",file:files,fields:$scope.book,headers:{"Content-Type":"multipart/form-data"},fileFormDataName:filesName}).success(function(){$scope.book=null,$scope.success=!0}).error(function(response){$scope.error=response.message})}}]),angular.module("books").controller("BookDetailsController",["$rootScope","$scope","BookService","$stateParams","Authentication","$location","$timeout","$http","$window",function($rootScope,$scope,Book,$stateParams,Authentication,$location,$timeout,$http,$window){function getHistory(){$http.get("/user/history").success(function(data){data.sort(function(dataA,dataB){return dataA.date-dataB.date}),data.length>3?$rootScope.history=data.slice(data.length-3):$rootScope.history=data})}$scope.sendRate=function(){var bookId=$scope.book._id;$http.post("/book/rate/"+bookId,{rate:$scope.book.rating})},$scope.authentication=Authentication,$scope.formVisible=!1,-1!==$location.path().indexOf("browse")&&($scope.book=Book.browse.get({author:$stateParams.author,slug:$stateParams.slug}),$scope.title=$scope.book.title),-1!==$location.path().indexOf("buy")&&($scope.book=Book.buy.get({author:$stateParams.author,slug:$stateParams.slug}),$scope.title=$scope.book.title),$scope.remove=function(){-1!==$location.path().indexOf("browse")&&Book.browse.remove({author:$stateParams.author,slug:$stateParams.slug},function(){$scope.success=!0,$scope.message="Book Removed",$timeout(function(){$location.path("/book/browse"),$scope.success=!1,$scope.message=""},2e3)},function(error){$scope.error=error.data.message}),-1!==$location.path().indexOf("buy")&&Book.buy.remove({author:$stateParams.author,slug:$stateParams.slug},function(){$scope.success=!0,$scope.message="Book Removed",$timeout(function(){$location.path("/book/buy"),$scope.success=!1,$scope.message=""},2e3)},function(error){$scope.error=error.data.message})},$scope.showForm=function(){$scope.formVisible=!0},$scope.buy=function(){var url="/book/buy/"+$scope.book._id;$http.post(url,{card:$scope.card}).success(function(data){$scope.formVisible=!1;var link=jQuery("<a>Download Book</a>").attr("href",data).appendTo(jQuery(".col-md-9"));link.click(function(){link.remove()})})},$scope.favourite=function(){$http.post("/book/favourite/"+$scope.book._id).success(function(){$scope.success=!0,$scope.message="Book Added To Favourite",getHistory(),$timeout(function(){$scope.success=!1,$scope.message=""},1e3)}).error(function(response){$scope.error=response.message,$timeout(function(){$scope.error=!1,$scope.message=""},1e3)})},$scope.wishlist=function(){$http.post("/book/wishlist/"+$scope.book._id).success(function(){$scope.success=!0,$scope.message="Book Added To Wishlist",getHistory(),$timeout(function(){$scope.success=!1,$scope.message=""},1e3)}).error(function(response){$scope.error=response.message,$timeout(function(){$scope.error=!1,$scope.message=""},1e3)})},$scope.mustread=function(){$http.post("/book/mustread/"+$scope.book._id).success(function(){$scope.success=!0,$scope.message="Book Added To Must Read Titles",getHistory(),$timeout(function(){$scope.success=!1,$scope.message=""},1e3)}).error(function(response){$scope.error=response.message,$timeout(function(){$scope.error=!1,$scope.message=""},1e3)})}}]),angular.module("books").controller("BookListController",["$scope","BookService",function($scope,Book){"Browse Available Books"===$scope.title&&Book.browse.query(function(data){$scope.books=data}),"Browse Books To Buy"===$scope.title&&($scope.books=Book.buy.query())}]),angular.module("books").controller("BookController",["$scope","$location","$http",function($scope,$location,$http){switch($scope.mainFilter="title",$location.path()){case"/book/browse":$scope.title="Browse Available Books";break;case"/book/buy":$scope.title="Browse Books To Buy";break;case"/book/best":$scope.title="List Of The Best",$http.get("/book/best").success(function(data){$scope.books=data});break;case"/book/favourite":$scope.title="Your Favourite Books",$http.get("/book/favourite").success(function(data){$scope.books=data});break;case"/book/wishlist":$scope.title="Your Wishlist",$http.get("/book/wishlist").success(function(data){$scope.books=data});break;case"/book/mustread":$scope.title="Your Must Read Titles",$http.get("/book/mustread").success(function(data){$scope.books=data})}}]),angular.module("books").directive("bookItem",["$http",function($http){return{restrict:"A",scope:"=",templateUrl:"modules/books/views/item.client.view.html",link:function(scope){scope.$watch("book.rating",function(newValue,oldValue){var bookId=scope.book._id;newValue!==oldValue&&$http.post("/book/rate/"+bookId,{rate:newValue})})}}}]),angular.module("books").factory("BookService",["$resource",function($resource){return{browse:$resource("/book/browse/:author/:slug"),buy:$resource("/book/buy/:author/:slug")}}]),angular.module("comments").controller("CommentsController",["$scope","Authentication","$http",function($scope,Authentication,$http){$scope.comment={},$scope.comment.author=Authentication.user.displayName,$scope.addComment=function(){$scope.comment.book=$scope.book._id,$http.post("/book/"+$scope.book._id+"/comment",$scope.comment).success(function(data){$scope.book.comments.push(data),$scope.comment={},$scope.comment.author=Authentication.user.displayName})}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]).run(["$rootScope","$location","Authentication",function($rootScope,$location,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState){"home"!==toState.name&&"signin"!==toState.name&&"signup"!==toState.name&&(Authentication.user||$location.path("/signin"))})}]),angular.module("core").controller("ContentController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.title="My Book App"}]),angular.module("core").directive("notification",["$timeout",function($timeout){return{scope:{},templateUrl:"modules/core/views/notification.client.view.html",link:function(scope,element,attrs){scope.$on("message",function(event,message){scope.message=message,element.slideDown(),$timeout(function(){element.slideUp(),scope.message=null},3e3)})}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("Socket",["socketFactory",function(socketFactory){return socketFactory()}]),angular.module("reader").controller("ReaderController",["$scope","$http","$stateParams","Authentication",function($scope,$http,$stateParams,Authentication){$http.get("/book/read/"+$stateParams.author+"/"+$stateParams.slug).success(function(response){$scope.epub=response}),$scope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){var link=fromState.url.replace(":author",fromParams.author).replace(":slug",fromParams.slug);$http.post("/user/reading",{link:link}),Authentication.user.reading=link}),angular.element(window).onbeforeunload=function(){$http.post("/user/reading",{link:Authentication.user.reading})}}]),angular.module("reader").directive("bookReader",[function(){return{restrict:"A",link:function(scope,element,attrs){scope.$watch("epub",function(oldValue,newValue){if(oldValue!==newValue){ePubReader(scope.epub)}})}}}]),angular.module("sidebar").controller("SidebarController",["$rootScope","$scope","$location","$http","Authentication",function($rootScope,$scope,$location,$http,Authentication){function getHistory(){$http.get("/user/history").success(function(data){data.sort(function(a,b){return a.date<b.date?1:a.date>b.date?-1:0}),data.length>3?$rootScope.history=data.slice(data.length-3):$rootScope.history=data})}$scope.authentication=Authentication,$scope.authentication.user&&getHistory(),$scope.isActive=function(route){return-1!==$location.path().indexOf(route)}}]),angular.module("sidebar").directive("time",["$interval","$filter",function($interval,$filter){return function(scope,element,attrs){function update(){element.text(filter(time))}var time=attrs.time,interval=6e4,filter=$filter("dateDiff"),timeoutId=$interval(update,interval);element.bind("$destroy",function(){$interval.cancel(timeoutId)}),update()}}]),angular.module("sidebar").filter("dateDiff",function(){return function(date){var diff=Math.ceil((Date.now()-new Date(date).getTime())/6e4);return 60>diff?diff+" minutes ago":86400>diff?Math.floor(diff/60)+" hours ago":diff>=86400?Math.floor(diff/86400)+" days ago":void 0}}),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("history",{url:"/user/history",templateUrl:"modules/users/views/users.history.client.view.html",controller:"HistoryController"}).state("help",{url:"/user/help",templateUrl:"modules/users/views/users.help.client.view.html",controller:"HelpController"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","Upload",function($scope,$http,$location,Authentication,Upload){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$scope.avatar?Upload.upload({url:"/auth/signup",fields:$scope.credentials,file:$scope.avatar}).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message}):$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","Upload",function($scope,$http,$location,Users,Authentication,Upload){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.updateUserProfile=function(isValid){if(isValid)if($scope.success=$scope.error=null,$scope.avatar)Upload.upload({url:"/users",method:"PUT",fields:$scope.user,file:$scope.avatar}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message});else{var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,$scope.user=Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ReadingController",["$http","$location",function($http,$location){$http.get("/user/reading").success(function(response){$location.path(response)}).error(function(response){})}]),angular.module("users").controller("HelpController",["$scope","$rootScope","Socket",function($scope,$rootScope,Socket,Authentication){function isAdmin(){return-1!==$scope.authentication.user.roles.indexOf("admin")}Socket.on("check:admin",function(){isAdmin()&&Socket.emit("online")}),isAdmin()&&Socket.emit("online"),Socket.on("connect:admin",function(){$rootScope.online=!0}),$rootScope.questions=$rootScope.questions||[],$scope.ask=function(){var from=isAdmin()?"Admin":$scope.authentication.user.displayName;Socket.emit("question",{from:from,question:$scope.question}),$scope.question=""},Socket.on("question",function(data){$rootScope.questions.push(data),$rootScope.$broadcast("message",data)})}]),angular.module("users").controller("HistoryController",["$scope","$http",function($scope,$http){$http.get("/user/history").success(function(data){data.sort(function(dataA,dataB){return dataA.date-dataB.date}),$scope.history=data,$scope.predicate="date",$scope.reverse=!0,$scope.sort=function(predicate){$scope.reverse=$scope.predicate===predicate?!$scope.reverse:!1,$scope.predicate=predicate}})}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);