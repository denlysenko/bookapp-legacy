{"version":3,"sources":["api/book/book.model.js"],"names":["Promise","require","BookSchema","title","type","String","required","trim","author","coverUrl","default","epubUrl","description","slug","total_rating","Number","total_rates","rating","added_at","Date","now","views","paid","Boolean","price","pre","next","virtual","get","set","virtuals","model"],"mappings":"AAAA;AACA;;;;;;AACA;;;;AAEA;;;;;;AADA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;AAGA,IAAIC,aAAa,qBAAW;AAC1BC,SAAO;AACLC,UAAMC,MADD;AAELC,cAAU,mBAFL;AAGLC,UAAM;AAHD,GADmB;AAM1BC,UAAQ;AACNJ,UAAMC,MADA;AAENC,cAAU,oBAFJ;AAGNC,UAAM;AAHA,GANkB;AAW1BE,YAAU;AACRL,UAAMC,MADE;AAERK,aAAS;AAFD,GAXgB;AAe1BC,WAAS;AACPP,UAAMC,MADC;AAEPK,aAAS;AAFF,GAfiB;AAmB1BE,eAAa;AACXR,UAAMC,MADK;AAEXK,aAAS;AAFE,GAnBa;AAuB1BG,QAAM;AACJT,UAAMC;AADF,GAvBoB;AA0B1BS,gBAAc;AACZV,UAAMW,MADM;AAEZL,aAAS;AAFG,GA1BY;AA8B1BM,eAAa;AACXZ,UAAMW,MADK;AAEXL,aAAS;AAFE,GA9Ba;AAkC1BO,UAAQ;AACNb,UAAMW,MADA;AAENL,aAAS;AAFH,GAlCkB;AAsC1BQ,YAAU;AACRd,UAAMe,IADE;AAERT,aAASS,KAAKC;AAFN,GAtCgB;AA0C1BC,SAAO;AACLjB,UAAMW,MADD;AAELL,aAAS;AAFJ,GA1CmB;AA8C1BY,QAAM;AACJlB,UAAMmB,OADF;AAEJb,aAAS;AAFL,GA9CoB;AAkD1Bc,SAAO;AACLpB,UAAMW,MADD;AAELL,aAAS;AAFJ;AAlDmB,CAAX,CAAjB;;AAwDA;AACAR,WAAWuB,GAAX,CAAe,MAAf,EAAuB,UAASC,IAAT,EAAe;AACpC,OAAKb,IAAL,GAAY,uBAAQ,KAAKV,KAAb,CAAZ;AACAuB;AACD,CAHD;;AAKAxB,WAAWyB,OAAX,CAAmB,KAAnB,EAA0BC,GAA1B,CAA8B,YAAW;AACvC,SAAO,uBAAQ,KAAKpB,MAAb,IAAuB,GAAvB,GAA6B,KAAKK,IAAzC;AACD,CAFD;;AAIA;AACAX,WAAW2B,GAAX,CAAe,QAAf,EAAyB,EAACC,UAAU,IAAX,EAAzB;;kBAEe,mBAASC,KAAT,CAAe,MAAf,EAAuB7B,UAAvB,C","file":"book.model.js","sourcesContent":["'use strict';\n/*eslint no-invalid-this:0*/\nimport slugify from '../../components/slugify';\nmongoose.Promise = require('bluebird');\nimport mongoose, {Schema} from 'mongoose';\n\nvar BookSchema = new Schema({\n  title: {\n    type: String,\n    required: 'Title is required',\n    trim: true\n  },\n  author: {\n    type: String,\n    required: 'Author is required',\n    trim: true\n  },\n  coverUrl: {\n    type: String,\n    default: ''\n  },\n  epubUrl: {\n    type: String,\n    default: ''\n  },\n  description: {\n    type: String,\n    default: ''\n  },\n  slug: {\n    type: String\n  },\n  total_rating: {\n    type: Number,\n    default: 0\n  },\n  total_rates: {\n    type: Number,\n    default: 0\n  },\n  rating: {\n    type: Number,\n    default: 0\n  },\n  added_at: {\n    type: Date,\n    default: Date.now\n  },\n  views: {\n    type: Number,\n    default: 0\n  },\n  paid: {\n    type: Boolean,\n    default: false\n  },\n  price: {\n    type: Number,\n    default: 0\n  }\n});\n\n// makes slug for book before saving\nBookSchema.pre('save', function(next) {\n  this.slug = slugify(this.title);\n  next();\n});\n\nBookSchema.virtual('url').get(function() {\n  return slugify(this.author) + '/' + this.slug;\n});\n\n// to access virtual property from Angular\nBookSchema.set('toJSON', {virtuals: true});\n\nexport default mongoose.model('Book', BookSchema);\n"]}