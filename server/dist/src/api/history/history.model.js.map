{"version":3,"sources":["api/history/history.model.js"],"names":["Promise","require","HistorySchema","userId","Types","ObjectId","actions","desc","String","committed_at","type","Date","default","now","model"],"mappings":"AAAA;;;;;;AAGA;;;;;;AADA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;;AAGA;;AAEA,IAAIC,gBAAgB,qBAAW;AAC7BC,UAAQ,iBAAOC,KAAP,CAAaC,QADQ;AAE7BC,WAAS,CAAC;AACRC,UAAMC,MADE;AAERC,kBAAc;AACZC,YAAMC,IADM;AAEZC,eAASD,KAAKE;AAFF;AAFN,GAAD;AAFoB,CAAX,CAApB;;kBAWe,mBAASC,KAAT,CAAe,SAAf,EAA0BZ,aAA1B,C","file":"history.model.js","sourcesContent":["'use strict';\n\nmongoose.Promise = require('bluebird');\nimport mongoose, {Schema} from 'mongoose';\n\n// TODO refactor Schema to make possible to fetch history by portions\n\nvar HistorySchema = new Schema({\n  userId: Schema.Types.ObjectId,\n  actions: [{\n    desc: String,\n    committed_at: {\n      type: Date,\n      default: Date.now\n    }\n  }]\n});\n\nexport default mongoose.model('History', HistorySchema);\n"]}