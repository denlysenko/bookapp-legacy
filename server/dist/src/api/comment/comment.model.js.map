{"version":3,"sources":["api/comment/comment.model.js"],"names":["Promise","require","CommentSchema","bookId","Types","ObjectId","messages","author","type","ref","created_at","Date","default","now","text","String","model"],"mappings":"AAAA;;;;;;AAGA;;;;;;AADA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;;AAGA,IAAIC,gBAAgB,qBAAW;AAC7BC,UAAQ,iBAAOC,KAAP,CAAaC,QADQ;AAE7BC,YAAU,CAAC;AACTC,YAAQ;AACNC,YAAM,iBAAOJ,KAAP,CAAaC,QADb;AAENI,WAAK;AAFC,KADC;AAKTC,gBAAY;AACVF,YAAMG,IADI;AAEVC,eAASD,KAAKE;AAFJ,KALH;AASTC,UAAMC;AATG,GAAD;AAFmB,CAAX,CAApB;;kBAee,mBAASC,KAAT,CAAe,SAAf,EAA0Bd,aAA1B,C","file":"comment.model.js","sourcesContent":["'use strict';\n\nmongoose.Promise = require('bluebird');\nimport mongoose, {Schema} from 'mongoose';\n\nvar CommentSchema = new Schema({\n  bookId: Schema.Types.ObjectId,\n  messages: [{\n    author: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    created_at: {\n      type: Date,\n      default: Date.now\n    },\n    text: String\n  }]\n});\n\nexport default mongoose.model('Comment', CommentSchema);\n"]}