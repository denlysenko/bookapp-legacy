{"version":3,"sources":["api/favourite/favourite.controller.js"],"names":["get","add","remove","handleError","res","statusCode","err","console","log","status","send","req","findOne","userId","user","_id","populate","exec","then","json","favourite","catch","bookId","body","message","books","indexOf","push","save","newFavourite","end","params","id","index","splice"],"mappings":"AAAA;;;;;QAegBA,G,GAAAA,G;QAaAC,G,GAAAA,G;QAgCAC,M,GAAAA,M;;AA1DhB;;;;;;AAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASC,GAAT,EAAc;AACnBC,YAAQC,GAAR,CAAYF,GAAZ;AACA,WAAOF,IAAIK,MAAJ,CAAWJ,UAAX,EAAuBK,IAAvB,CAA4BJ,GAA5B,CAAP;AACD,GAHD;AAID;;AAED;;;AAGO,SAASN,GAAT,CAAaW,GAAb,EAAkBP,GAAlB,EAAuB;AAC5B,SAAO,oBAAUQ,OAAV,CAAkB,EAAEC,QAAQF,IAAIG,IAAJ,CAASC,GAAnB,EAAlB,EACJC,QADI,CACK,OADL,EAEJC,IAFI,GAGJC,IAHI,CAGC,qBAAa;AACjBd,QAAIe,IAAJ,CAASC,SAAT;AACD,GALI,EAMJC,KANI,CAMElB,YAAYC,GAAZ,CANF,CAAP;AAOD;;AAED;;;AAGO,SAASH,GAAT,CAAaU,GAAb,EAAkBP,GAAlB,EAAuB;AAC5B,MAAMkB,SAASX,IAAIY,IAAJ,CAASD,MAAxB;AACA,MAAG,CAACA,MAAJ,EAAY;AACV,WAAOlB,IAAIK,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB,EAAEK,SAAS,mBAAX,EAArB,CAAP;AACD;;AAED,SAAO,oBAAUZ,OAAV,CAAkB,EAAEC,QAAQF,IAAIG,IAAJ,CAASC,GAAnB,EAAlB,EAA4CE,IAA5C,GACJC,IADI,CACC,qBAAa;AACjB,QAAGE,SAAH,EAAc;AACZ,UAAGA,UAAUK,KAAV,CAAgBC,OAAhB,CAAwBJ,MAAxB,IAAkC,CAAC,CAAtC,EAAyC;AACvC,eAAOlB,IAAIK,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB,EAAEK,SAAS,+BAAX,EAArB,CAAP;AACD;;AAEDJ,gBAAUK,KAAV,CAAgBE,IAAhB,CAAqBL,MAArB;AACA,aAAOF,UAAUQ,IAAV,EAAP;AACD,KAPD,MAOO;AACL,UAAIC,eAAe,wBAAc;AAC/BhB,gBAAQF,IAAIG,IAAJ,CAASC,GADc;AAE/BU,eAAO,CAACH,MAAD;AAFwB,OAAd,CAAnB;AAIA,aAAOO,aAAaD,IAAb,EAAP;AACD;AACF,GAhBI,EAiBJV,IAjBI,CAiBC,YAAM;AACVd,QAAI0B,GAAJ;AACD,GAnBI,EAoBJT,KApBI,CAoBElB,YAAYC,GAAZ,CApBF,CAAP;AAqBD;;AAED;;;AAGO,SAASF,MAAT,CAAgBS,GAAhB,EAAqBP,GAArB,EAA0B;AAC/B,MAAMS,SAASF,IAAIG,IAAJ,CAASC,GAAxB;AAAA,MACEO,SAASX,IAAIoB,MAAJ,CAAWC,EADtB;AAEA,SAAO,oBAAUpB,OAAV,CAAkB,EAAEC,QAAQA,MAAV,EAAlB,EAAsCI,IAAtC,GACJC,IADI,CACC,qBAAa;AACjB,QAAMe,QAAQb,UAAUK,KAAV,CAAgBC,OAAhB,CAAwBJ,MAAxB,CAAd;;AAEA,QAAGW,UAAU,CAAC,CAAd,EAAiB;AACf,aAAO7B,IAAIK,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB,EAAEK,SAAS,uCAAX,EAArB,CAAP;AACD;;AAEDJ,cAAUK,KAAV,CAAgBS,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;AACA,WAAOb,UAAUQ,IAAV,EAAP;AACD,GAVI,EAWJV,IAXI,CAWC,YAAM;AACVd,QAAI0B,GAAJ;AACD,GAbI,EAcJT,KAdI,CAcElB,YAAYC,GAAZ,CAdF,CAAP;AAeD","file":"favourite.controller.js","sourcesContent":["'use strict';\n\nimport Favourite from './favourite.model';\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    console.log(err);\n    return res.status(statusCode).send(err);\n  };\n}\n\n/**\n * get favourites by user\n */\nexport function get(req, res) {\n  return Favourite.findOne({ userId: req.user._id })\n    .populate('books')\n    .exec()\n    .then(favourite => {\n      res.json(favourite);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * adds book to favourites\n */\nexport function add(req, res) {\n  const bookId = req.body.bookId;\n  if(!bookId) {\n    return res.status(400).json({ message: 'Book Not Provided' });\n  }\n\n  return Favourite.findOne({ userId: req.user._id }).exec()\n    .then(favourite => {\n      if(favourite) {\n        if(favourite.books.indexOf(bookId) > -1) {\n          return res.status(400).json({ message: 'Book is already in Favourites' });\n        }\n\n        favourite.books.push(bookId);\n        return favourite.save();\n      } else {\n        let newFavourite = new Favourite({\n          userId: req.user._id,\n          books: [bookId]\n        });\n        return newFavourite.save();\n      }\n    })\n    .then(() => {\n      res.end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * removes book from favourites\n */\nexport function remove(req, res) {\n  const userId = req.user._id,\n    bookId = req.params.id;\n  return Favourite.findOne({ userId: userId }).exec()\n    .then(favourite => {\n      const index = favourite.books.indexOf(bookId);\n\n      if(index === -1) {\n        return res.status(400).json({ message: 'Book Not Found in Your Favourite List' });\n      }\n\n      favourite.books.splice(index, 1);\n      return favourite.save();\n    })\n    .then(() => {\n      res.end();\n    })\n    .catch(handleError(res));\n}\n"]}